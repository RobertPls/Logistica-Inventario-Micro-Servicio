// <auto-generated />
using System;
using Infrastructure.Inventario.EF.Config.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Inventario.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20221108202102_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Inventario.EF.ReadModel.AlmacenReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("almacenId");

                    b.Property<long>("CapacidadMaxima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("capacidadMaxima");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("latitud");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("longitud");

                    b.HasKey("Id");

                    b.ToTable("Almacen", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Inventario.EF.ReadModel.ProductoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productoId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombreProducto");

                    b.Property<decimal>("Precio")
                        .HasPrecision(14, 2)
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Inventario.EF.ReadModel.StockAlmacenReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("stockAlmacenId");

                    b.Property<Guid>("AlmacenId")
                        .HasColumnType("uuid")
                        .HasColumnName("almacenId");

                    b.Property<Guid?>("AlmacenReadModelId")
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("cantidad");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid")
                        .HasColumnName("productoId");

                    b.HasKey("Id");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("AlmacenReadModelId");

                    b.HasIndex("ProductoId");

                    b.ToTable("StockAlmacen", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Inventario.EF.ReadModel.StockAlmacenReadModel", b =>
                {
                    b.HasOne("Infrastructure.Inventario.EF.ReadModel.AlmacenReadModel", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Inventario.EF.ReadModel.AlmacenReadModel", null)
                        .WithMany("Stock")
                        .HasForeignKey("AlmacenReadModelId");

                    b.HasOne("Infrastructure.Inventario.EF.ReadModel.ProductoReadModel", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Infrastructure.Inventario.EF.ReadModel.AlmacenReadModel", b =>
                {
                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
